name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          # Ubuntu 20.04
          - { os: ubuntu-20.04, cpp_standard: "11", build_type: "Debug" }
          - { os: ubuntu-20.04, cpp_standard: "14", build_type: "Debug" }
          - { os: ubuntu-20.04, cpp_standard: "17", build_type: "Debug" }
          - { os: ubuntu-20.04, cpp_standard: "17", build_type: "RelWithDebInfo" }
          # MacOS
          - { os: macos-latest, cpp_standard: "11", build_type: "Debug" }
          - { os: macos-latest, cpp_standard: "14", build_type: "Debug" }
          - { os: macos-latest, cpp_standard: "17", build_type: "Debug" }
          # Windows
          - { os: windows-2019, cpp_standard: "11", build_type: "Debug" }
          - { os: windows-2019, cpp_standard: "14", build_type: "Debug" }
          - { os: windows-2019, cpp_standard: "17", build_type: "Debug" }
          - { os: windows-2019, cpp_standard: "17", build_type: "RelWithDebInfo" }

    runs-on: ${{ matrix.job.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake \
          $GITHUB_WORKSPACE \
          -DCMAKE_CXX_STANDARD=${{matrix.job.cpp_standard}} \
          -DCMAKE_BUILD_TYPE=${{matrix.job.build_type}} \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{runner.workspace}}/build

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: "Run ls (TODO: remove)"
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ls -R

    - name: Run example
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ./dbg_macro-example

    - name: Run demo
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ./dbg_macro-demo

    - name: Run tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ./dbg_macro-tests

    - name: Run tests (macro disabled)
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ./dbg_macro-tests-macro_disabled
